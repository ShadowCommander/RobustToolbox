preset raw;

#include "/Shaders/Internal/shadow_cast_shared.swsl"

const highp float g_MinVariance = 0.0;

varying highp vec2 worldPosition;

// Center of the FOV, in world coordinates.
uniform highp vec2 center;

void vertex()
{
    highp vec3 transformed = modelMatrix * vec3(VERTEX, 1.0);
    worldPosition = transformed.xy;
    transformed = projectionMatrix * viewMatrix * transformed;

    VERTEX = transformed.xy;
}

void fragment()
{
    highp vec2 diff = worldPosition - center;

    highp float ourDist = length(diff);

    highp vec2 occlDist = occludeDepth(diff, TEXTURE, 0.25);

    highp float occlusion = ChebyshevUpperBound(occlDist, ourDist);

    if (occlusion >= 1.0)
    {
        discard;
    }

    COLOR = vec4(0.0, 0.0, 0.0, 1.0 - occlusion);
}
